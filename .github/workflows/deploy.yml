name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]

jobs:
  deploy:
    if: github.event_name == 'push' || github.event.action != 'closed'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '22'

      - name: Install dependencies and Build
        run: |
          yarn install --frozen-lockfile
          yarn build

      - name: Deploy main branch to GitHub Pages
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
          destination_dir: ""
          keep_files: true
          commit_message: "chore: deploy main build"

      - name: Deploy PR branch to GitHub Pages
        if: github.event_name == 'pull_request' && github.event.action != 'closed'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
          destination_dir: "pr-${{ github.event.pull_request.number }}"
          keep_files: true
          commit_message: "chore: deploy build for PR # ${{ github.event.pull_request.number }}"

      - name: Post PR comment
        if: github.event_name == 'pull_request' && github.event.action != 'closed'
        uses: actions/github-script@v7
        with:
          script: |
            const bodyText = 'View PR build here:';
            const prNumber = context.payload.pull_request.number;
            const buildUrl = `https://${context.repo.owner}.github.io/${context.repo.repo}/pr-${prNumber}/`;
            const body = `${bodyText}\n${buildUrl}`;
            
            const { data: comments } = await github.rest.issues.listComments({
              ...context.repo,
              issue_number: prNumber,
            });

            const existing = comments.find(c => c.user.type === "Bot" && c.body.includes(bodyText));
            if (existing) {
              await github.rest.issues.updateComment({
                ...context.repo,
                comment_id: existing.id,
                body,
              });
            } else {
              await github.rest.issues.createComment({
                ...context.repo,
                issue_number: prNumber,
                body,
              });
            }

  cleanup:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout gh-pages
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Remove PR build
        run: |
          git fetch origin gh-pages || true
          git checkout gh-pages || git checkout --orphan gh-pages
          rm -rf pr-${{ github.event.pull_request.number }}
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "chore: remove build for PR #${{ github.event.pull_request.number }}" || echo "No changes to commit"
          git push origin gh-pages
